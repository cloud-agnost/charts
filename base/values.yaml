# Kubernetes platform. Values can be:
# - minikube (default)
# - dockerdesktop
# - kind
host: minikube

# this is needed to install mongodb-community crd inside the chart via crds/ directory
community-operator:
  community-operator-crds:
    enabled: false

minio:
  nameOverride: minio
  fullnameOverride: minio
  mode: standalone
  existingSecret: "minio-credentials"
  persistence:
    size: 5Gi
  resources:
    requests:
      memory: 1Gi
  users:
  ## Username, password and policy to be assigned to the user
  ## Default policies are [readonly|readwrite|writeonly|consoleAdmin|diagnostics]
  - accessKey: appUser
    existingSecret: minio-credentials
    existingSecretKey: userPassword
    policy: readwrite

# values for the bitnami redis chart
redis:
  nameOverride: redis
  fullnameOverride: redis
  master:
    persistence:
      size: 2Gi
  architecture: standalone
  # this can be set if "architecture: replication"
  #replica:
  #  replicaCount: 1
  #  persistence:
  #    size: 2Gi
  auth:
    existingSecret: redis-password
    existingSecretPasswordKey: password

engine:
  monitor:
    image: "gcr.io/agnost-community/engine/monitor"
    tag: "817aa49"
    resources: {}
    #  requests:
    #    cpu: '50m'
    #    memory: '256Mi'
    #  limits:
    #    cpu: '1000m'
    #    memory: '2Gi'
  realtime:
    image: "gcr.io/agnost-community/engine/realtime"
    tag: "817aa49"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    #hpa:
    #  targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources: {}
      #requests:
      #  cpu: '50m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'
  scheduler:
    image: "gcr.io/agnost-community/engine/scheduler"
    tag: "817aa49"
    resources: {}
      #requests:
      #  cpu: '50m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'
  worker:
    image: "gcr.io/agnost-community/engine/worker"
    tag: "817aa49"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    #hpa:
    #  targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources: {}
      #requests:
      #  cpu: '100m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'

platform:
  core:
    image: "gcr.io/agnost-community/platform/core"
    tag: "817aa49"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    #hpa:
    #  targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources: {}
      #requests:
      #  cpu: '100m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'
  sync:
    image: "gcr.io/agnost-community/platform/sync"
    tag: "817aa49"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    #hpa:
    #  targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources: {}
      #requests:
      #  cpu: '50m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'
  worker:
    image: "gcr.io/agnost-community/platform/worker"
    tag: "817aa49"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    #hpa:
    #  targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources: {}
      #requests:
      #  cpu: '50m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'

studio:
  image: "gcr.io/agnost-community/studio"
  tag: "817aa49"
  # You can enable Horizantal Pod Autoscaler for this deployment
  # but it also requires resources to be set
  #hpa:
  #  targetCpuUtilization: 90
  #  targetMemory: '250Mi'
  resources: {}
    #requests:
    #  cpu: '50m'
    #  memory: '256Mi'
    #limits:
    #  cpu: '1000m'
    #  memory: '2Gi'
