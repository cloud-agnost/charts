ingress-nginx:
  enabled: true
  controller:
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    resources:
      requests:
        cpu: 100m
        memory: 200Mi

  # Platform running the ingress, annotations needed for Elastic Kubernetes Service (AWS),
  # Azure Kubernetes Service and Digital Ocean Kubernetes
  # Possible values:
  # - AKS
  # - DOKS
  # - EKS
  platform: ""

cert-manager:
  namespace: cert-manager
  startupapicheck:
    enabled: false

minio:
  nameOverride: minio
  fullnameOverride: minio
  mode: standalone
  existingSecret: "minio-credentials"
  persistence:
    size: 20Gi
  resources:
    requests:
      memory: 256Mi
  users: []
#  ## Username, password and policy to be assigned to the user
#  ## Default policies are [readonly|readwrite|writeonly|consoleAdmin|diagnostics]
#  - accessKey: appUser
#    existingSecret: minio-credentials
#    existingSecretKey: userPassword
#    policy: readwrite
  buckets: []

mongodbcommunity:
  storage:
    dataVolumeSize: 5Gi
    logVolumeSize: 1Gi

# values for the bitnami redis chart
redis:
  nameOverride: redis
  fullnameOverride: redis
  master:
    persistence:
      size: 2Gi
  architecture: standalone
  # this can be set if "architecture: replication"
  #replica:
  #  replicaCount: 1
  #  persistence:
  #    size: 2Gi
  auth:
    existingSecret: redis-password
    existingSecretPasswordKey: password

engine:
  monitor:
    image: "gcr.io/agnost-community/engine/monitor"
    tag: "v1.0.12"
    resources: {}
    #  requests:
    #    cpu: '50m'
    #    memory: '256Mi'
    #  limits:
    #    cpu: '1000m'
    #    memory: '2Gi'
  realtime:
    image: "gcr.io/agnost-community/engine/realtime"
    tag: "v1.0.6"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    hpa:
      targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources:
      requests:
        cpu: '100m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'
  scheduler:
    image: "gcr.io/agnost-community/engine/scheduler"
    tag: "v1.0.8"
    resources: {}
      #requests:
      #  cpu: '50m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'
  worker:
    image: "gcr.io/agnost-community/engine/worker"
    tag: "v1.0.47"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    hpa:
      targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources:
      requests:
        cpu: '200m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'

platform:
  core:
    image: "gcr.io/agnost-community/platform/core"
    tag: "v1.0.67"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    hpa:
      targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources:
      requests:
        cpu: '200m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'
  sync:
    image: "gcr.io/agnost-community/platform/sync"
    tag: "v1.0.7"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    hpa:
      targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources:
      requests:
        cpu: '100m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'
  worker:
    image: "gcr.io/agnost-community/platform/worker"
    tag: "v1.0.8"
    # You can enable Horizantal Pod Autoscaler for this deployment
    # but it also requires resources to be set
    hpa:
      targetCpuUtilization: 90
    #  targetMemory: '250Mi'
    resources:
      requests:
        cpu: '50m'
      #  memory: '256Mi'
      #limits:
      #  cpu: '1000m'
      #  memory: '2Gi'

studio:
  image: "gcr.io/agnost-community/studio"
  tag: "v1.0.57"
  # You can enable Horizantal Pod Autoscaler for this deployment
  # but it also requires resources to be set
  hpa:
    targetCpuUtilization: 90
  #  targetMemory: '250Mi'
  resources:
    requests:
      cpu: '100m'
    #  memory: '256Mi'
    #limits:
    #  cpu: '1000m'
    #  memory: '2Gi'
