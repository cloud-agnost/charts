apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-core-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: platform-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: platform-core
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 30%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: platform-core
    spec:
      serviceAccountName: provisioner-sa
      containers:
      - name: platform-core
        {{- with .Values.platform.core }}
        image: {{ .image }}:{{ .tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4000
        env:
          - name: CACHE_HOSTNAME
            value: redis-master
          - name: CACHE_READ_REPLICA_HOSTNAME
            value: redis-replicas
          - name: CACHE_PWD
            valueFrom:
               secretKeyRef:
                  name: redis-password
                  key: password
          - name: CACHE_READ_REPLICA_PWD
            valueFrom:
               secretKeyRef:
                  name: redis-password
                  key: password
          - name: QUEUE_USERNAME
            valueFrom:
               secretKeyRef:
                  name: rabbitmq-credentials
                  key: username
          - name: QUEUE_PASSWORD
            valueFrom:
               secretKeyRef:
                  name: rabbitmq-credentials
                  key: password
          - name: QUEUE_HOST
            valueFrom:
               secretKeyRef:
                  name: rabbitmq-credentials
                  key: host
          - name: CLUSTER_DB_URI
            valueFrom:
               secretKeyRef:
                  name: cluster-secrets
                  key: clusterDBURI
          - name: CLUSTER_DB_USER
            value: "mongo-user"
          - name: CLUSTER_DB_PWD
            valueFrom:
               secretKeyRef:
                  name: mongodb-admin-password
                  key: password
          - name: PASSPHRASE
            valueFrom:
               secretKeyRef:
                  name: cluster-secrets
                  key: passPhrase
          - name: CLUSTER_ACCESS_TOKEN
            valueFrom:
               secretKeyRef:
                  name: cluster-secrets
                  key: clusterAcessToken
          - name: MASTER_TOKEN
            valueFrom:
               secretKeyRef:
                  name: cluster-secrets
                  key: masterToken
          - name: ACCESS_TOKEN
            valueFrom:
               secretKeyRef:
                  name: cluster-secrets
                  key: accessToken
        volumeMounts:
          - name: cluster-storage
            mountPath: /storage
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          failureThreshold: 3
          periodSeconds: 20
        startupProbe:
          httpGet:
            path: /health
            port: 4000
          failureThreshold: 30
          periodSeconds: 30
        resources:
            requests:
               cpu: {{ .resources.requests.cpu }}
               memory: {{ .resources.requests.memory }}
            limits:
               cpu: {{ .resources.limits.cpu }}
               memory: {{ .resources.limits.memory }}
        {{- end }}
      volumes:
        - name: cluster-storage
          persistentVolumeClaim:
            claimName: cluster-storage-pvc
