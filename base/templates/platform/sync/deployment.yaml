apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-sync-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: platform-sync
spec:
  replicas: 1
  selector:
    matchLabels:
      app: platform-sync
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 30%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: platform-sync
    spec:
      initContainers:
      - name: wait-for-redis
        image: redis:alpine
        imagePullPolicy: IfNotPresent
        args: [ 'sh', '-c', 'until redis-cli -h ${CACHE_HOSTNAME} -p 6379 -a ${CACHE_PWD} get hello; do echo "Sleeping a bit..."; sleep 3; done; echo "Redis is ready!";' ]
        env:
          - name: CACHE_HOSTNAME
            value: redis-master
          - name: CACHE_PWD
            valueFrom:
               secretKeyRef:
                  name: redis-password
                  key: password
      containers:
      - name: platform-sync
        image: {{ .Values.platform.sync.image }}:{{ .Values.platform.sync.tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4000
        env:
          - name: CACHE_HOSTNAME
            value: redis-master
          - name: CACHE_PWD
            valueFrom:
               secretKeyRef:
                  name: redis-password
                  key: password
          - name: MASTER_TOKEN
            valueFrom:
               secretKeyRef:
                  name: cluster-secrets
                  key: masterToken
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          failureThreshold: 3
          periodSeconds: 20
        startupProbe:
          httpGet:
            path: /health
            port: 4000
          failureThreshold: 30
          periodSeconds: 30
{{- if .Values.platform.sync.resources  }}
        resources:
{{ toYaml .Values.platform.sync.resources | indent 10 }}
{{- end }}
